#include <iostream>
#include <thread>
#include <chrono>
#include <mutex>
#include <stdlib.h>
#include "SimpleTimer.h"

using namespace std;

mutex mtx1;
mutex mtx2;

void Print(char ch) {
    mtx1.lock();
    this_thread::sleep_for(chrono::milliseconds(1000));
    mtx2.lock();

        for (int i = 0; i < 5; ++i) {
            for (int i = 0; i < 10; i++) {
                cout << ch;
                this_thread::sleep_for(chrono::milliseconds(20));
            }
            cout << endl;
        }
        cout << endl; 
       
        mtx2.unlock();
        mtx1.unlock();
    this_thread::sleep_for(chrono::milliseconds(2000));
}

void Print2(char ch) {
    mtx1.lock();
    this_thread::sleep_for(chrono::milliseconds(1000));
    mtx2.lock();

    for (int i = 0; i < 5; ++i) {
        for (int i = 0; i < 10; i++) {
            cout << ch;
            this_thread::sleep_for(chrono::milliseconds(20));
        }
        cout << endl;
    }
    cout << endl;

    mtx2.unlock();
    mtx1.unlock();
    this_thread::sleep_for(chrono::milliseconds(2000));
}

int main() {
    setlocale(LC_ALL, "ru");
    
    SimpleTimer timer;

    thread t1(Print, '*');
    thread t2(Print2, '#');

    t1.join();
    t2.join();
    
    return 0;
}
