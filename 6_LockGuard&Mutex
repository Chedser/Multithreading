#include <iostream>
#include <thread>
#include <chrono>
#include <mutex>
#include <stdlib.h>
#include "SimpleTimer.h"

using namespace std;

mutex mtx;

void Print(char ch) {
    this_thread::sleep_for(chrono::milliseconds(2000));
    {
        lock_guard<mutex> guard(mtx); // mtx.lock()
        for (int i = 0; i < 5; ++i) {
            for (int i = 0; i < 10; i++) {
                cout << ch;
                this_thread::sleep_for(chrono::milliseconds(20));
            }
            cout << endl;
        }
        cout << endl; 
        // В этом месте неявный вызов guard.~lock_guard(). Аналогично mtx.unlock()
    }
    
    this_thread::sleep_for(chrono::milliseconds(2000));
}

int main() {
    setlocale(LC_ALL, "ru");
    
    SimpleTimer timer;

    thread t1(Print, '*');
    thread t2(Print, '#');

    t1.join();
    t2.join();
   // Print('*');
  //  Print('#');
    
    return 0;
}
